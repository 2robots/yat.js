// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.yat = window.yat || {};

  window.yat.TimelineView = (function(_super) {

    __extends(_Class, _super);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.className = 'yat-inner';

    _Class.prototype.options = {
      id_prefix: ''
    };

    _Class.prototype.initialize = function() {
      return this.render();
    };

    _Class.prototype.render = function() {
      var that;
      that = this;
      this.options.id_prefix = 'table' + _.random(0, 1000);
      this.container = $(window.yat.templates.timelineContainer());
      this.viewport = new window.yat.ViewportView({
        model: this.model,
        dispatcher: this.options.dispatcher,
        id_prefix: this.options.id_prefix
      });
      this.navigation = $(window.yat.templates.timelineNavigation());
      this.overview = new window.yat.OverviewView({
        model: this.model.getStartEnd(),
        dispatcher: this.options.dispatcher
      });
      this.navigationBar = new window.yat.NavigationView({
        model: this.model,
        dispatcher: this.options.dispatcher
      });
      this.navigation.append(this.overview.$el);
      this.navigation.append(this.navigationBar.$el);
      this.container.children('.yat-timeline-inner1').append(this.navigation);
      this.container.children('.yat-timeline-inner1').append(this.viewport.$el);
      return that.$el.append(this.container);
    };

    _Class.prototype.fullscreen = function() {
      var that;
      that = this;
      return setTimeout((function() {
        var container;
        container = $('body').append('<div id="yat-fullscreen-' + that.options.id_prefix + '" />');
        return container.append(that.$el);
      }), 3000);
    };

    return _Class;

  })(Backbone.View);

}).call(this);

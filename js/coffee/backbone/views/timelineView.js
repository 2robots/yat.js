// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.yat = window.yat || {};

  window.yat.TimelineView = (function(_super) {

    __extends(_Class, _super);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.className = 'yat-inner';

    _Class.prototype.options = {
      id_prefix: ''
    };

    _Class.prototype.fullscreen_placeholder = void 0;

    _Class.prototype.fullscreen_button = void 0;

    _Class.prototype.fullscreen_button_end = void 0;

    _Class.prototype.compontent_load_counter = 0;

    _Class.prototype.initialize = function() {
      return this.render();
    };

    _Class.prototype.render = function() {
      var that;
      that = this;
      this.container = $(window.yat.templates.timelineContainer());
      this.container.addClass('loading');
      that.options.dispatcher.on('load_component_start', function() {
        return that.compontent_load_counter++;
      });
      that.options.dispatcher.on('load_component_end', function() {
        that.compontent_load_counter--;
        if (that.compontent_load_counter <= 0) {
          return that.container.removeClass('loading');
        }
      });
      this.$el.append(that.container);
      return window.setTimeout((function() {
        that.options.id_prefix = 'table' + _.random(0, 1000);
        that.viewport = new window.yat.ViewportView({
          model: that.model,
          dispatcher: that.options.dispatcher,
          id_prefix: that.options.id_prefix
        });
        that.overview = new window.yat.OverviewView({
          model: that.model.getStartEnd(),
          dispatcher: that.options.dispatcher
        });
        that.navigation = new window.yat.NavigationView({
          model: that.model,
          dispatcher: that.options.dispatcher
        });
        that.navigation.$el.append(that.overview.$el);
        that.container.children('.yat-timeline-inner1').append(that.navigation.$el);
        that.container.children('.yat-timeline-inner1').append(that.viewport.$el);
        that.fullscreen_button = $(window.yat.templates.timelineFullScreen());
        that.fullscreen_button_end = $(window.yat.templates.timelineFullScreenEnd());
        that.fullscreen_button_end.hide();
        that.fullscreen_button.click(function() {
          return that.options.dispatcher.trigger('fullscreen_start');
        });
        that.fullscreen_button_end.click(function() {
          return that.options.dispatcher.trigger('fullscreen_end');
        });
        that.options.dispatcher.on('fullscreen_start', function() {
          return that.fullscreen_start();
        });
        that.options.dispatcher.on('fullscreen_end', function() {
          return that.fullscreen_end();
        });
        that.container.append(that.fullscreen_button);
        return that.container.append(that.fullscreen_button_end);
      }), 1);
    };

    _Class.prototype.fullscreen_start = function() {
      var container, current_element, that;
      that = this;
      current_element = that.viewport.getCurrentElement();
      that.$el.after('<div class="yat-fullscreen-placeholder" style="display:none" />');
      that.fullscreen_placeholder = that.$el.next();
      container = $('<div class="yat-fullscreen" id="yat-fullscreen-' + that.options.id_prefix + '" />');
      $('body').append(container);
      container.append(that.$el);
      that.viewport.insert_prev_element(that.viewport.getCurrentElements().length + 2);
      that.viewport.insert_next_element(that.viewport.getCurrentElements().length + 2);
      that.viewport.disable_load_more_till_scrollend = true;
      that.viewport.jump_to(current_element, true, (function() {
        return that.viewport.disable_load_more_till_scrollend = false;
      }));
      that.fullscreen_button_end.show();
      return that.fullscreen_button.hide();
    };

    _Class.prototype.fullscreen_end = function() {
      var current_element, that;
      that = this;
      current_element = that.viewport.getCurrentElement();
      that.fullscreen_placeholder.after(that.$el);
      $('#yat-fullscreen-' + that.options.id_prefix).remove();
      that.fullscreen_placeholder.remove();
      that.viewport.insert_prev_element(that.viewport.getCurrentElements().length + 2);
      that.viewport.insert_next_element(that.viewport.getCurrentElements().length + 2);
      that.viewport.disable_load_more_till_scrollend = true;
      that.viewport.jump_to(current_element, true, (function() {
        return that.viewport.disable_load_more_till_scrollend = false;
      }));
      that.fullscreen_button_end.hide();
      return that.fullscreen_button.show();
    };

    return _Class;

  })(Backbone.View);

}).call(this);

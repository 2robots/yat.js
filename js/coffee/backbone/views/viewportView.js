// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.yat = window.yat || {};

  window.yat.ViewportView = (function(_super) {

    __extends(_Class, _super);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.className = 'yat-inner';

    _Class.prototype.initialize = function() {
      return this.render();
    };

    _Class.prototype.remove = function() {
      return Backbone.View.prototype.remove.call(this);
    };

    _Class.prototype.render = function() {
      var navlinks, viewport;
      viewport = $(window.yat.templates.timelineViewportElementList());
      this.model.each(function(item) {
        var view;
        view = new window.yat.viewportItemView({
          model: item
        });
        return viewport.append(view.$el);
      });
      navlinks = $(window.yat.templates.timelineViewportNavlinks());
      this.$el.html(viewport);
      this.$el.parent().append(navlinks);
      return this.registerEventListener();
    };

    _Class.prototype.registerEventListener = function() {
      this.$el.bind('touchmove', function() {
        return console.log("touchmove");
      });
      this.$el.scroll(function() {
        return console.log("scroll");
      });
      return this.$el.children().first().children().click(function() {
        return console.log("viewport item click");
      });
    };

    return _Class;

  })(Backbone.View);

}).call(this);
